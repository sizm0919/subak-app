{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suzum\\\\subak-app-sample\\\\app\\\\javascript\\\\packs\\\\news_data.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nvar target_dom = null;\ndocument.addEventListener('DOMContentLoaded', function () {\n  target_dom = document.querySelector('#data');\n  var url = new URL(location.href);\n  var f = url.searchParams.get(\"name\");\n\n  if (f == null) {\n    f = '';\n  }\n\n  getData(f);\n});\n\nfunction getData(f) {\n  var _this = this;\n\n  var url = location.protocol + \"//\" + location.host + \"/top/news\";\n  fetch(url).then(function (res) {\n    return res.json();\n  }, function (error) {\n    var el = /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"ERROR!!\");\n    ReactDOM.render(el, target_dom);\n  }).then(function (result) {\n    console.log(result);\n    var arr = [];\n\n    for (var n in result.rss.channel.item) {\n      var data = result.rss.channel.item[n];\n      var newsdate = dateFormat(result.rss.channel.item[n].pubDate);\n      arr.push( /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: data.link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, data.title)), /*#__PURE__*/React.createElement(\"td\", {\n        \"class\": \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, newsdate)));\n    }\n\n    var el = /*#__PURE__*/React.createElement(\"table\", {\n      \"class\": \"table mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      \"class\": \"thead-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"News Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, arr));\n    ReactDOM.render(el, target_dom);\n  }, function (error) {\n    console.log(error);\n    var el = /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"ERROR!!\");\n    ReactDOM.render(el, target_dom);\n  });\n} // 日付の整形\n\n\nvar weeks = ['日', '月', '火', '水', '木', '金', '土'];\n\nfunction dateFormat(date) {\n  // 日付の変換\n  var dateStr = new Date(date); // 年の取得\n\n  var year = dateStr.getFullYear(); // 月の取得\n\n  var month = dateStr.getMonth() + 1; // 日の取得\n\n  var day = dateStr.getDate(); // 曜日の取得\n\n  var week = dateStr.getDay(); // 時の取得\n\n  var hour = dateStr.getHours(); // 分の取得\n\n  var minute = dateStr.getMinutes(); // 秒の取得\n\n  var second = dateStr.getSeconds();\n  return year + '/' + month + '/' + day + '(' + weeks[week] + ') ' + hour + ':' + minute + ':' + second;\n}","map":{"version":3,"sources":["C:/Users/suzum/subak-app-sample/app/javascript/packs/news_data.jsx"],"names":["React","ReactDOM","PropTypes","target_dom","document","addEventListener","querySelector","url","URL","location","href","f","searchParams","get","getData","protocol","host","fetch","then","res","json","error","el","render","result","console","log","arr","n","rss","channel","item","data","newsdate","dateFormat","pubDate","push","link","title","weeks","date","dateStr","Date","year","getFullYear","month","getMonth","day","getDate","week","getDay","hour","getHours","minute","getMinutes","second","getSeconds"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\n\nvar target_dom = null;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  target_dom = document.querySelector('#data');\n  const url = new URL(location.href);\n  let f = url.searchParams.get(\"name\");\n  if (f == null){ f = ''; }\n  getData(f);\n});\n\nfunction getData(f){\n  let url = location.protocol + \"//\" + location.host + \"/top/news\";\n  fetch(url)\n  .then(\n    res => res.json(),\n    (error) => {\n      const el = (\n        <p>ERROR!!</p>\n      );\n      ReactDOM.render(el, target_dom);\n    }\n  )\n  .then(\n    (result) => {\n      console.log(result);\n      let arr = [];\n      for(let n in result.rss.channel.item){  \n        let data = result.rss.channel.item[n];\n        let newsdate = dateFormat(result.rss.channel.item[n].pubDate);\n        arr.push(\n          <tr>\n            <th><a href={data.link} target=\"_blank\" rel=\"noopener noreferrer\">{data.title}</a></th>\n            <td class=\"small\">{newsdate}</td>\n          </tr>\n        );\n      }\n      const el = (\n        <table class=\"table mt-4\">\n          <thead class=\"thead-light\">\n          <tr><th>News Title</th>\n            <th>Date</th></tr>\n          </thead>\n          <tbody>{arr}</tbody>\n          </table>\n      );\n      ReactDOM.render(el, target_dom);\n    },\n    (error) => {\n      console.log(error);\n      const el = (\n        <p>ERROR!!</p>\n      );\n      ReactDOM.render(el, target_dom);\n    }\n  );\n}\n\n// 日付の整形\nvar weeks = ['日', '月', '火', '水', '木', '金', '土'];\nfunction dateFormat(date) {\n    // 日付の変換\n    var dateStr = new Date(date);\n    // 年の取得\n    var year = dateStr.getFullYear();\n    // 月の取得\n    var month = dateStr.getMonth() + 1;\n    // 日の取得\n    var day = dateStr.getDate();\n    // 曜日の取得\n    var week = dateStr.getDay();\n    // 時の取得\n    var hour = dateStr.getHours();\n    // 分の取得\n    var minute = dateStr.getMinutes();\n    // 秒の取得\n    var second = dateStr.getSeconds();\n \n    return year + '/' + month + '/' + day + '(' + weeks[week] + ') ' + hour + ':' + minute + ':' + second;\n}\n"]},"metadata":{},"sourceType":"module"}